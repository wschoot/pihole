---
- hosts: all
  become: true
  vars:
    motd: |
      curl -sSL https://install.pi-hole.net | bash
      OR
      sudo bash basic-install.sh --unattended
      http://{{ ansible_eth1.ipv4.address }}/admin
      sudo qrencode -t ansiutf8 < /etc/wireguard/client.conf

  tasks:
    - name: Install epel & remi
      package:
        name:
          - epel-release
          - "https://rpms.remirepo.net/enterprise/remi-release-{{ ansible_facts['distribution_major_version'] }}.rpm"

    - name: deps
      package:
        name:
          - bind-utils
          - cronie
          - curl
          - dialog
          - findutils
          - git
          - iproute
          - libcap
          - newt
          - nmap-ncat
          - php-cli
          - php-cli
          - php-common
          - libidn2
          - lighttpd
          - lighttpd-fastcgi
          - php-pdo
          - procps-ng
          - psmisc
          - sqlite
          - sudo
          - tcpdump
          - unzip
          - wget
          - which
          - yum-utils
        state: installed

    - name: Put SELinux in permissive mode
      selinux:
        policy: targeted
        state: permissive

    - name: create pihole directory
      file:
        path: /etc/pihole
        state: directory

    - name: Update pihole configuration
      copy:
        dest: /etc/pihole/setupVars.conf
        content: |
          WEBPASSWORD=
          PIHOLE_INTERFACE=eth1
          IPV4_ADDRESS={{ ansible_eth1.ipv4.address }}/{{ ansible_eth1.ipv4.netmask }}
          IPV6_ADDRESS=
          QUERY_LOGGING=true
          INSTALL_WEB_SERVER=true
          INSTALL_WEB_INTERFACE=true
          LIGHTTPD_ENABLED=true
          PIHOLE_DNS_1=8.8.8.8
          PIHOLE_DNS_2=8.8.4.4

    - name: Copy using inline content
      copy:
        content: "{{ motd }}"
        dest: /etc/motd

    - name: download install script
      get_url:
        url: https://install.pi-hole.net
        dest: /home/vagrant/basic-install.sh
        mode: u+rwx
        owner: vagrant

    #- name: run install script
      #command: bash basic-install.sh --unattended
      #args#:
        #creates: /usr/local/bin/pihole

    - name: Wireguard dependencies
      package:
        name:
          - kernel-devel
          - kernel-headers
          - kernel
          - qrencode
        state: latest

    - name: reboot for new kernel
      reboot:
      # when if [ "$(sudo grubby --default-kernel | sed 's/^[^-]*-//')" != "$(uname -r)" ] ; then echo anders; else echo same; fi

    - name: Add Wireguard repo
      yum_repository:
        name: wireguard
        description: Copr repo for wireguard owned by jdoss
        baseurl: https://copr-be.cloud.fedoraproject.org/results/jdoss/wireguard/epel-7-$basearch
        enabled: yes
        gpgkey: https://copr-be.cloud.fedoraproject.org/results/jdoss/wireguard/pubkey.gpg
        gpgcheck: true

    - name: Wireguard dependencies
      package:
        name:
          - wireguard-dkms
          - wireguard-tools
        state: latest


    - name: Create config dir
      file:
        state: directory
        path: /etc/wireguard

    - name: sysctl
      sysctl:
        name: "{{ item }}"
        state: present
        value: "1"
        sysctl_file: /etc/sysctl.d/forwarding.conf
        sysctl_set: yes
        reload: yes
      loop:
        - net.ipv4.ip_forward
        - net.ipv6.conf.all.forwarding

    - name: Create keypairs
      shell: umask 077 && wg genkey | tee wg-op7-private.key | wg pubkey > wg-op7-public.key
      args:
        chdir: /etc/wireguard
        creates:
          - /etc/wireguard/wg-op7-private.key
          - /etc/wireguard/wg-op7-public.key

    - name: cat privkey op7
      command: cat /etc/wireguard/wg-op7-private.key
      register: op7privkey
      tags: genconfig

    - name: cat pubkey op7
      command: cat /etc/wireguard/wg-op7-public.key
      register: op7pubkey
      tags: genconfig

    - name: Create keypairs
      shell: umask 077 && wg genkey | tee wg-private.key | wg pubkey > wg-public.key
      args:
        chdir: /etc/wireguard
        creates:
          - /etc/wireguard/wg-private.key
          - /etc/wireguard/wg-public.key

    - name: cat privkey
      command: cat /etc/wireguard/wg-private.key
      register: serverprivkey
      tags: genconfig

    - name: cat pubkey
      command: cat /etc/wireguard/wg-public.key
      register: serverpubkey
      tags: genconfig

    - name: Build rest of config
      copy:
        dest: /etc/wireguard/wg0.conf
        mode: 0600
        content: |
          [Interface]
          PrivateKey = {{ serverprivkey.stdout }}
          ListenPort = 51280
          SaveConfig = false
          Address = 10.0.88.1/24
          PreUp = ip r add default via 192.168.88.1 dev eth1; iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -s 10.0.88.0/24 -o eth1 -j MASQUERADE
          PostDown = ip r del default via 192.168.88.1 dev eth1; iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -s 10.0.88.0/24 -o eth1 -j MASQUERADE

          [Peer]
          PublicKey = {{ op7pubkey.stdout }}
          AllowedIPs = 10.0.88.2/32
      tags: genconfig

    - name: Build client config
      copy:
        dest: /etc/wireguard/client.conf
        mode: 0600
        content: |
          [Interface]
          PrivateKey = {{ op7privkey.stdout }}
          Address = 10.0.88.2/24
          DNS = 10.0.88.1,8.8.8.8

          [Peer]
          Endpoint = huis.schoot.org:53
          PublicKey = {{ serverpubkey.stdout }}
          AllowedIPs = 0.0.0.0/0, ::/0
          PersistentKeepalive = 25
      tags: genconfig

    - name: enable start
      systemd:
        state: started
        service: wg-quick@wg0
        enabled: true
